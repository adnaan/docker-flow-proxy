version: '2'


services:

  unit:
    image: golang:1.6
    volumes:
      - .:/usr/src/myapp
      - /tmp/go:/go
    command: bash -c "cd /usr/src/myapp && go get -d -v -t && go test --cover -v ./... && go build -v -o docker-flow-proxy"

  staging-dep:
    image: vfarcic/docker-flow-proxy
    environment:
      CONSUL_ADDRESS: ${HOST_IP}:8500
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - ./test_configs/:/test_configs/
    depends_on:
      - consul
      - registrator
      - app-1
      - app-2
      - app-3

  staging:
    image: golang:1.6
    volumes:
      - .:/usr/src/myapp
      - /tmp/go:/go
    environment:
      - DOCKER_IP=${HOST_IP}
      - CONSUL_IP=${HOST_IP}
    command: bash -c "cd /usr/src/myapp && go get -d -v -t && go test --tags integration"

  production:
    extends:
      service: staging

  consul:
    image: progrium/consul
    ports:
      - 8500:8500
      - 8301:8301
      - 8300:8300
    command: -server -bootstrap

  registrator:
    image: gliderlabs/registrator
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    command: -ip ${HOST_IP} consul://${HOST_IP}:8500
    depends_on:
      - consul

  app-1:
    image: vfarcic/docker-flow-proxy
    environment:
      CONSUL_ADDRESS: ${HOST_IP}:8500
      SERVICE_8080_NAME: test-service
    ports:
      - 8080
    depends_on:
      - consul

  app-2:
    image: vfarcic/docker-flow-proxy
    environment:
      CONSUL_ADDRESS: ${HOST_IP}:8500
      SERVICE_8080_NAME: test-service
    ports:
      - 8080
    depends_on:
      - consul

  app-3:
    image: vfarcic/docker-flow-proxy
    environment:
      CONSUL_ADDRESS: ${HOST_IP}:8500
      SERVICE_8080_NAME: test-service
    ports:
      - 8080
    depends_on:
      - consul